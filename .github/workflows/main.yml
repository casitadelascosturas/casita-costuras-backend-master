name: Build and Push Docker Image to GitHub Container Registry

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Paso 1: Check out the repository
      - name: Check out the repository
        uses: actions/checkout@v2

      # Paso 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Paso 3: Instalar jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      # Paso 4: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # Paso 5: Extract version from package.json
      - name: Extract version from package.json
        id: version
        run: echo "::set-output name=VERSION::$(jq -r .version < package.json)"

      # Paso 6: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/casita-costuras-backend:${{ steps.version.outputs.VERSION }} .
          docker push ghcr.io/${{ github.repository }}/casita-costuras-backend:${{ steps.version.outputs.VERSION }}

      # Paso 7: Tag latest
      - name: Tag latest
        run: |
          docker tag ghcr.io/${{ github.repository }}/casita-costuras-backend:${{ steps.version.outputs.VERSION }} ghcr.io/${{ github.repository }}/casita-costuras-backend:latest
          docker push ghcr.io/${{ github.repository }}/casita-costuras-backend:latest

      # Paso 8: Increment version in package.json
      - name: Increment version
        run: |
          NEW_VERSION=$(jq -r ".version" package.json | awk -F. '{$NF += 1;} 1' OFS=.)
          jq ".version = \"$NEW_VERSION\"" package.json > temp.json && mv temp.json package.json
          echo $NEW_VERSION > image_version.txt  # Guardar la nueva versi√≥n para la imagen

      # Paso 9: Commit and push version change
      - name: Commit and push version change
        env:
          REPO_PAT: ${{ secrets.GHCR_PAT }}  # Utiliza el token de GitHub que definiste como GHCR_PAT
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package.json
          if git diff --quiet; then
            echo "No changes to commit."
          else
            git commit -m "chore: Bump version to $NEW_VERSION"
            git push https://github-actions:${REPO_PAT}@github.com/${{ github.repository }}.git HEAD:master
          fi

      # Paso 10: Define output version for next workflow
      - name: Set output
        id: output
        run: echo "::set-output name=IMAGE_VERSION::$(cat image_version.txt)"
